{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Convertation": {
    "Pdf": {
      "ViewPort": {
        "Width": "1920",
        "Height": "1080",
        "SinglePageMode": "True"
      },
      "Functions": {
        "Evaluate": "() => {let ypos = 0; setInterval(() => {window.scrollTo(0, ypos); ypos+=100;}, 10);\nlet scrollY = window.scrollY; \nlet flag = false, timeout = -1, changeFlag = () => { timeout = window.setTimeout(() => {flag = true;}, 1000);}; \nlet checkImages = function(){\nlet prevScrollY = scrollY;scrollY = window.scrollY; if(prevScrollY != scrollY) return false; \nif (document.readyState!=\"complete\") { return false;}\nlet images = document.getElementsByTagName(\"img\"); \nlet loaded = images.length; \nfor (let i = 0; i < images.length; i++) { if (images[i].complete) { loaded--; } else { images[i].addEventListener(\"load\", function() { loaded--; if (loaded == 0) { changeFlag(); return flag; } }); } \nif (loaded == 0) { changeFlag(); return flag; } } window.clearTimeout(timeout); return false;} \nlet inter = setInterval(() => {if (checkImages()) {clearInterval(inter); window.readyForPDF = true;}}, 100);}",
        "WaitFor": "() => window.readyForPDF"
      },
      "ChroniumRelativePath": "CustomChronium"
    }
  },
  "Services": {
    "Files": {
      "RelativeRootPath": "Processed",
      "Livetime": "15",
      "CronExpression": "*/5 * * * *"
    }
  }
}
